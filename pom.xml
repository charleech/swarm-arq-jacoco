<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2017-2017

    This work is licensed under a Creative Commons
    Attribution-NonCommercial-ShareAlike 4.0 International License.

    https://creativecommons.org/licenses/by-nc-sa/4.0/
    https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode
    https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.txt

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.charlee.sample</groupId>
    <artifactId>swarm-arq-jacoco</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>swarm-arq-jacoco</name>
    <url>http://maven.apache.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <my.project.inception.year>2017</my.project.inception.year>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        
        <my.jacoco.maven.version>0.7.9</my.jacoco.maven.version>
        <my.maven.surefire.version>2.19.1</my.maven.surefire.version>
        <my.maven.surefire.junit.version>2.19.1</my.maven.surefire.junit.version>
        <my.maven.failsafe.version>2.19.1</my.maven.failsafe.version>
 
        <my.javaee.version>7.0</my.javaee.version>
        
        <my.weld.version>2.4.3.Final</my.weld.version>
        <my.arquillian.version>1.1.13.Final</my.arquillian.version>
        <my.wildfly.swarm.version>2017.4.0</my.wildfly.swarm.version>
        <my.arquillian.jacoco.version>1.0.0.Alpha9</my.arquillian.jacoco.version>
        <my.jacoco.version>0.7.9</my.jacoco.version>
        <my.junit.version>4.12</my.junit.version>
        <my.mockito.version>2.7.22</my.mockito.version>
        <my.assertj.version>3.6.2</my.assertj.version>

        <my.jacoco.coverage.path>${project.build.directory}/coverage-reports</my.jacoco.coverage.path>
    </properties>

    <inceptionYear>${my.project.inception.year}</inceptionYear>

    <licenses>
        <license>
            <name>Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License.</name>
            <url>https://creativecommons.org/licenses/by-nc-sa/4.0/legalcode.txt</url>
            <distribution>manual</distribution>
        </license>
    </licenses>
    
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${my.maven.surefire.version}</version>
                    <dependencies>
                       <dependency>
                           <groupId>org.apache.maven.surefire</groupId>
                           <artifactId>surefire-junit47</artifactId>
                           <version>${my.maven.surefire.junit.version}</version>
                       </dependency>
                    </dependencies>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <includes>
                            <include>
                                **/*TestSuite*.java
                            </include>
                        </includes>
                        <excludes>
                            <exclude>
                                **/*IntgrtnTestSuite*.java
                            </exclude>
                        </excludes>
                        <excludedGroups>
                            ${my.integration.test.category}
                        </excludedGroups>
                        <additionalClasspathElements>
                            <additionalClasspathElement>
                                ${basedir}/src/test/java
                            </additionalClasspathElement>
                        </additionalClasspathElements>
                        <argLine>${my.jacoco.argLine}</argLine>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${my.maven.failsafe.version}</version>
                    <dependencies>
                       <dependency>
                           <groupId>org.apache.maven.surefire</groupId>
                           <artifactId>surefire-junit47</artifactId>
                           <version>${my.maven.surefire.junit.version}</version>
                       </dependency>
                    </dependencies>
                    <configuration>
                        <encoding>${project.build.sourceEncoding}</encoding>
                        <includes>
                            <include>
                                **/*IntgrtnTestSuite*.java
                            </include>
                        </includes>
                        <groups>
                            ${my.integration.test.category}
                        </groups>
                        <additionalClasspathElements>
                            <additionalClasspathElement>
                                ${basedir}/src/test/java
                            </additionalClasspathElement>
                        </additionalClasspathElements>
                        <!--argLine>${my.jacoco.argLineIT}</argLine-->
                        <systemPropertyVariables>
                            <jacoco.test>${my.jacoco.argLineIT}</jacoco.test>
                        </systemPropertyVariables>
                    </configuration>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin> 
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${my.jacoco.maven.version}</version>
                    <executions>
                        <execution>
                            <id>prepare-agent</id>
                            <phase>test-compile</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${my.jacoco.coverage.path}/jacoco-it.exec</destFile>
                                <dataFile>${my.jacoco.coverage.path}/jacoco-it.exec</dataFile>
                                <!--
                                The property must be the different name
                                with the unittest. If not, we will face the 
                                issue about double argLine in surefire and 
                                failsafe plugin.
                                 -->
                                <propertyName>my.jacoco.argLineIT</propertyName>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report-integration</goal>
                            </goals>
                            <configuration>
                                <dataFile>${my.jacoco.coverage.path}/jacoco-it.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <propertyName>my.jacoco.argLine</propertyName>
                        <destFile>${my.jacoco.coverage.path}/jacoco-unit.exec</destFile>
                        <dataFile>${my.jacoco.coverage.path}/jacoco-unit.exec</dataFile>
                        <excludes>
                            <exclude>
                                ${my.project.quality.excludes}
                            </exclude>
                        </excludes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.wildfly.swarm</groupId>
                    <artifactId>wildfly-swarm-plugin</artifactId>
                    <version>${my.wildfly.swarm.version}</version>
                    <executions>
                        <execution>
                            <id>package</id>
                            <goals>
                                <goal>package</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>wildfly-swarm-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-api</artifactId>
                <version>${my.javaee.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${my.arquillian.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.wildfly.swarm</groupId>
                <artifactId>bom-all</artifactId>
                <version>${my.wildfly.swarm.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-core</artifactId>
                <version>${my.weld.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian.extension</groupId>
                <artifactId>arquillian-jacoco</artifactId>
                <version>${my.arquillian.jacoco.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jacoco</groupId>
                <artifactId>org.jacoco.core</artifactId>
                <version>${my.jacoco.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${my.junit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${my.mockito.version}</version>
            </dependency>
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${my.assertj.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <dependencies>
        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.weld</groupId>
            <artifactId>weld-core</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>undertow</artifactId>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>cdi</artifactId>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wildfly.swarm</groupId>
            <artifactId>arquillian</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.extension</groupId>
            <artifactId>arquillian-jacoco</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>org.jacoco.core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>aspg-local-license</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>!skipBase</name>
                </property>
            </activation>
            <properties>
                <my.gmaven.version>1.5</my.gmaven.version>
                <my.license.maven.version>3.0</my.license.maven.version>
                <my.download.maven.version>1.3.0</my.download.maven.version>
            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.googlecode.maven-download-plugin</groupId>
                            <artifactId>download-maven-plugin</artifactId>
                            <version>${my.download.maven.version}</version>
                            <executions>
                                <execution>
                                    <id>download-license</id>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>wget</goal>
                                    </goals>
                                    <configuration>
                                        <url>${my.local.cc.license}</url>
                                        <outputDirectory>${project.build.directory}/license</outputDirectory>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.gmaven</groupId>
                            <artifactId>gmaven-plugin</artifactId>
                            <version>${my.gmaven.version}</version>
                            <executions>
                                <execution>
                                    <id>create-current-year</id>
                                    <phase>validate</phase>
                                    <goals>
                                        <goal>execute</goal>
                                    </goals>
                                    <configuration>
                                        <source>
                                            import java.util.Date
                                            import java.text.MessageFormat
                                            def vartimestamp = MessageFormat.format("{0,date,yyyy}", new Date())
                                            project.properties['currentYear'] = vartimestamp
                                        </source>
                                    </configuration>
                                </execution>
                            </executions>
                        </plugin>
                        <plugin>
                            <groupId>com.mycila</groupId>
                            <artifactId>license-maven-plugin</artifactId>
                            <version>${my.license.maven.version}</version>
                            <configuration>
                                <header>${my.local.cc.license}</header>
                                <properties>
                                    <!-- Values to be substituted in template -->
                                    <h_inceptionYear>${project.inceptionYear}</h_inceptionYear>
                                    <h_currentYear>${currentYear}</h_currentYear>
                                </properties>
                                <strictCheck>true</strictCheck>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>add-license-bom</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>aspg-add-license</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.googlecode.maven-download-plugin</groupId>
                        <artifactId>download-maven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>add-license</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>format</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>remove-license-bom</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>aspg-remove-license</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>remove-license</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>remove</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>check-license-bom</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>aspg-check-license</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.gmaven</groupId>
                        <artifactId>gmaven-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>check-license</id>
                                <phase>validate</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
